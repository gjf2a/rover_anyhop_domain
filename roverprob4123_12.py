from pyhop_anytime import *
global state, goals
state = State('state')
state.at = Oset([('rover0','waypoint2'),('rover1','waypoint3'),('rover2','waypoint4')])
state.at_lander = Oset([('general','waypoint3')])
state.at_rock_sample = Oset(['waypoint2','waypoint3','waypoint4','waypoint5'])
state.at_soil_sample = Oset(['waypoint1','waypoint4'])
state.available = Oset(['rover0','rover1','rover2'])
state.calibration_target = Oset([('camera0','objective0'),('camera1','objective1')])
state.can_traverse = Oset([('rover0','waypoint0','waypoint2'),('rover0','waypoint0','waypoint4'),('rover0','waypoint1','waypoint2'),('rover0','waypoint2','waypoint0'),('rover0','waypoint2','waypoint1'),('rover0','waypoint2','waypoint3'),('rover0','waypoint2','waypoint5'),('rover0','waypoint3','waypoint2'),('rover0','waypoint4','waypoint0'),('rover0','waypoint5','waypoint2'),('rover1','waypoint0','waypoint1'),('rover1','waypoint0','waypoint3'),('rover1','waypoint0','waypoint5'),('rover1','waypoint1','waypoint0'),('rover1','waypoint2','waypoint3'),('rover1','waypoint3','waypoint0'),('rover1','waypoint3','waypoint2'),('rover1','waypoint3','waypoint4'),('rover1','waypoint4','waypoint3'),('rover1','waypoint5','waypoint0'),('rover2','waypoint0','waypoint1'),('rover2','waypoint0','waypoint3'),('rover2','waypoint0','waypoint4'),('rover2','waypoint1','waypoint0'),('rover2','waypoint2','waypoint5'),('rover2','waypoint3','waypoint0'),('rover2','waypoint4','waypoint0'),('rover2','waypoint4','waypoint5'),('rover2','waypoint5','waypoint2'),('rover2','waypoint5','waypoint4')])
state.channel_free = Oset(['general'])
state.empty = Oset(['rover0store','rover1store','rover2store'])
state.equipped_for_imaging = Oset(['rover0','rover2'])
state.equipped_for_rock_analysis = Oset(['rover0','rover1','rover2'])
state.equipped_for_soil_analysis = Oset(['rover0','rover2'])
state.on_board = Oset([('camera0','rover0'),('camera1','rover2')])
state.store_of = Oset([('rover0store','rover0'),('rover1store','rover1'),('rover2store','rover2')])
state.supports = Oset([('camera0','colour'),('camera0','high_res'),('camera1','high_res')])
state.visible = Oset([('waypoint0','waypoint1'),('waypoint0','waypoint2'),('waypoint0','waypoint3'),('waypoint0','waypoint4'),('waypoint0','waypoint5'),('waypoint1','waypoint0'),('waypoint1','waypoint2'),('waypoint1','waypoint5'),('waypoint2','waypoint0'),('waypoint2','waypoint1'),('waypoint2','waypoint3'),('waypoint2','waypoint5'),('waypoint3','waypoint0'),('waypoint3','waypoint2'),('waypoint3','waypoint4'),('waypoint4','waypoint0'),('waypoint4','waypoint3'),('waypoint4','waypoint5'),('waypoint5','waypoint0'),('waypoint5','waypoint1'),('waypoint5','waypoint2'),('waypoint5','waypoint4')])
state.visible_from = Oset([('objective0','waypoint0'),('objective0','waypoint1'),('objective0','waypoint2'),('objective0','waypoint3'),('objective0','waypoint4'),('objective1','waypoint0'),('objective1','waypoint1'),('objective1','waypoint2'),('objective1','waypoint3')])
state.calibrated = Oset()
state.communicated_image_data = Oset()
state.communicated_rock_data = Oset()
state.communicated_soil_data = Oset()
state.full = Oset()
state.have_image = Oset()
state.have_rock_analysis = Oset()
state.have_soil_analysis = Oset()

goals = State('goals')
goals.communicated_image_data = Oset([('objective0','high_res')])
goals.communicated_rock_data = Oset(['waypoint2','waypoint3','waypoint4'])
goals.communicated_soil_data = Oset(['waypoint1','waypoint4'])

